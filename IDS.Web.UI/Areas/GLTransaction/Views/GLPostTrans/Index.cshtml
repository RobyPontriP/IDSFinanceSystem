@model IEnumerable<IDS.GLTransaction.GLVoucherH>

@{
    ViewBag.Title = "Post Transaction List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/Content/DataTables/datatables.css" />
    <link rel="stylesheet" href="~/Content/DataTables/DataTables-1.10.25/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="~/Content/DataTables/Select-1.3.3/css/select.bootstrap5.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/flatpickr/flatpickr.min.css" />
    <link href="~/Content/Select2/css/select2.min.css" rel="stylesheet" />
}

@{
    Html.RenderPartial("_ProgressPage");
}

<style type="text/css">
    td.details-control {
        background: url("@Url.Content("~/Images/Default/details_open.png")") no-repeat center center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url("@Url.Content("~/Images/Default/details_close.png")") no-repeat center center;
    }

    .fontSizeCustom {
        width: 20px;
    }
</style>



<div class="card">
    <div class="card-header">
        <h3 class="card-title">Filter</h3>
        <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group row mb-2">
                    @Html.Label("Branch Code", new { @class = "control-label col-sm-3 col-form-label" })
                    <div class="col-xs-12 col-sm-9">
                        @Html.DropDownList("Branch", ViewData["BranchList"] as SelectList, "-- Select Branch --", new { @id = "cboBranchCode", @class = "form-control form-control-sm select2d" })
                    </div>
                </div>
                @*<div class="form-group row mb-0">
                        @Html.Label("Source Code", new { @class = "control-label col-sm-3 col-form-label" })
                        <div class="col-sm-9 mb-2">
                            @Html.DropDownList("Source Code", (ViewData["SCodeList"] as SelectList), "-- Select Source Code --", new { @id = "cboSourceCode", @class = "form-control form-control-sm select2d" })
                        </div>
                    </div>*@
            </div>

            <div class="col-sm-3 mb-2">
                <div class="form-group row mb-2">
                    @Html.Label("From", new { @class = "control-label col-form-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.TextBox("FromDate", ViewData["FirstDayOfMonth"], new { @id = "txtFromDate", @class = "form-control form-control-sm bg-white" })
                    </div>
                </div>

                <div class="form-group row mb-0">
                    @Html.Label("To", new { @class = "control-label col-form-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.TextBox("ToDate", ViewData["CurrDate"], new { @id = "txtToDate", @class = "form-control form-control-sm bg-white" })
                    </div>
                </div>
            </div>

            @*<div class="col-sm-2 mb-2 ml-2">
                    <div class="form-group row mb-2">
                        <div class="form-check form-check-inline">
                            @Html.CheckBox("chkTransDate", true, new { @id = "chkTransDate", @class = "form-check-input" })
                            @Html.Label("chkTransDate", "Trans Date", new { @class = "form-check-label" })
                        </div>
                    </div>

                    <div class="form-group row mb-0">
                        <div class="form-check form-check-inline">
                            @Html.CheckBox("chkEntryDate", false, new { @id = "chkEntryDate", @class = "form-check-input" })
                            @Html.Label("chkEntryDate", "Entry Date", new { @class = "form-check-label" })
                        </div>
                    </div>
                </div>*@

            <div class="col-sm-1">
                <a class="btn btn-sm btn-default" onclick="Refresh()" title="Refresh Data">
                    <i class="fas fa-search"></i>
                </a>
            </div>
        </div>
        @*<div class="row">
                <div class="col-sm-6 text-right">
                    <a class="btn btn-sm btn-default" onclick="Refresh()" title="Refresh Data">
                        <i class="fas fa-search"></i>
                    </a>
                </div>
            </div>*@
    </div>
</div>


<div class="row">
    <div class="col-sm-6 col-md-6 col-6">
        <h4>@ViewData["Title"]</h4>
    </div>
    <div class="col-sm-6 col-md-6 col-6 text-right">
        <p>
            <button type="button" title="Posting Transaction" onclick="Process()" class="btn btn-outline-info col-sm-2 form-control-sm" id="btnPosting">Posting</button>
        </p>
    </div>
</div>


<div class="table-responsive table-responsive-sm p-2 bg-white border">
    <table id="tableData" class="table table-bordered table-hover w-100">
        <thead>
            <tr class="align-top">
                <th valign="middle"></th>
                <th valign="middle"></th>
                <th class="align-middle">Source Code</th>
                <th class="align-middle">Voucher</th>
                <th class="align-middle">Entry Date</th>
                <th class="align-middle">Trans. Date</th>
                <th class="align-middle">Operator ID</th>
                <th class="align-middle">Last Update</th>
                <th class="align-middle">Branch</th>
            </tr>
        </thead>
    </table>
</div>


<div id="PartialSection">

</div>


@section Scripts {
    <script src="~/Scripts/moment.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/DataTables-1.10.25/js/dataTables.bootstrap5.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/Select-1.3.3/js/select.bootstrap5.js"></script>
    <script src="~/Content/flatpickr/flatpickr.min.js"></script>
    <script src="~/Content/flatpickr/id.min.js"></script>
    <script src="~/Content/Select2/js/select2.full.min.js"></script>
    <script src="~/Scripts/GeneralDataTable.js"></script>
    <script type="text/javascript">

        function format(d, rowindex) {
            return '<div class="mb-2"><strong>Source Code : </strong> ' + d.SCode.Code + '<label style="width:50px;"></label>' + '<strong>Voucher : </strong> ' + d.Voucher + "</div> " +
            '<div class="table-responsive table-responsive-sm p-2 bg-white border">' +
                '<table id="' + rowindex.toString() + '" class="table table-bordered table-hover w-100" name="tableDetail">' +
                    '<thead>' +
                        '<tr>' +
                            '<th>No.</th>' +
                            '<th>Account No.</th>' +
                            '<th>Ccy</th>' +
                            '<th>Cash Acc</th>' +
                            '<th>Doc. No.</th>' +
                            '<th>Description</th>' +
                            '<th>Debit</th>' +
                            '<th>Credit</th>' +
                        '</tr>' +
                    '</thead>' +
                '</table>' +
            '</div>';
        }

        var table = null;
        var tableDetail = 'tblDetail';
        var indexTbl = 0;

        $(document).ready(function () {
            indexTbl = 0;
            flatpickr("#txtFromDate, #txtToDate", {
                dateFormat: "d/M/Y",
                disableMobile: true,
                static: true,
            });

            table = LoadData($("#cboBranchCode").val(), ($("#txtFromDate").val() == '' ? null : moment($("#txtFromDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD'))
                , ($("#txtToDate").val() == '' ? null : moment($("#txtToDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD')));

            // Add event listener for opening and closing details
            $('#tableData tbody').on('click', 'td.details-control', function () {
                var selRow = table.rows(this).data();

                rowIndex = $(this).closest("tr").index();
                //GetRowChild($("#cboBranchCode").val(), selRow[0]["SCode"], selRow[0]["Voucher"], rowIndex);

                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data(), rowIndex)).show();
                    LoadDataDetail($("#cboBranchCode").val(), selRow[0]["SCode"]["Code"], selRow[0]["Voucher"], rowIndex);
                    tr.addClass('shown');
                }
            });

            $("#txtToDate").change(function () {
                var dtpTo = new Date($("#txtToDate").val());
                var dtpFrom = new Date($("#txtFromDate").val());
                if (dtpTo < dtpFrom) {
                    alert('From Date cannot less then To');
                    $("#txtToDate").val($("#txtFromDate").val());
                    return;
                }

                curFromDate = $("#<%=txtDtpFrom.ClientID %>").val();
            });

            $("#txtFromDate").change(function () {
                if ($("#txtToDate").val() != '') {
                    var dtpTo = new Date($("#txtToDate").val());
                    var dtpFrom = new Date($("#txtFromDate").val());
                    if (dtpTo < dtpFrom) {
                        alert('From Date cannot greather then To');
                        $("#txtToDate").val($("#txtFromDate").val());
                        return;
                    }
                }
            });

            $(".select2d").select2({
                theme: "classic"
            });
        });


        $("#chkTransDate").change(function () {
            if ($("#chkTransDate").is(":checked") == true) {
                $("#chkEntryDate").prop('checked', false);

                if ($("#txtFromDate").val() == '') {
                    var d = new Date(),
                        currDate = ((d.getDate()) + '/' + (d.toLocaleString('en-us', { month: 'short' })) + '/' + d.getFullYear()),
                        firstDateOfMonth = (('1') + '/' + (d.toLocaleString('en-us', { month: 'short' })) + '/' + d.getFullYear());

                    $("#txtFromDate").val(firstDateOfMonth);
                    $("#txtToDate").val(currDate);
                }
            }
            else {
                if ($("#chkEntryDate").is(":checked") == false) {
                    $("#txtFromDate").val('');
                    $("#txtToDate").val('');
                }
            }
        });

        $("#chkEntryDate").change(function () {
            if ($("#chkEntryDate").is(":checked") == true) {
                $("#chkTransDate").prop('checked', false);

                if ($("#txtFromDate").val() == '') {
                    var d = new Date(),
                        currDate = ((d.getDate()) + '/' + (d.toLocaleString('en-us', { month: 'short' })) + '/' + d.getFullYear()),
                        firstDateOfMonth = (('1') + '/' + (d.toLocaleString('en-us', { month: 'short' })) + '/' + d.getFullYear());

                    $("#txtFromDate").val(firstDateOfMonth);
                    $("#txtToDate").val(currDate);
                }
            }
            else {
                if ($("#chkTransDate").is(":checked") == false) {
                    $("#txtFromDate").val('');
                    $("#txtToDate").val('');
                }
            }
        });


        function LoadData(branch, fromDate, toDate) {
            return $('#tableData').DataTable
        ({
            destroy: true,
            "columnDefs": [
                {
                    "className": 'details-control',
                    "targets": 'no-sort',
                    "orderable": false,
                },
                {
                    "data": null,
                    "width": "20px",
                    "defaultContent": '',
                    "orderable": false,
                    "targets": [0]
                },
                {
                    "orderable": true,
                    "class": "text-center",
                    "width": "2",
                    "targets": [1]
                },
                {
                    "orderable": true,
                    "class": "text-center",
                    "width": "70px",
                    "targets": [2]
                },
                {
                    "orderable": "true",
                    "width": "30px",
                    "targets": [3]
                },
                {
                    "orderable": true,
                    "width": "60px",
                    "targets": [4]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [5]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [6]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [7]
                },
                {
                    "width": "80px",
                    "orderable": true,
                    "visible": false,
                    "targets": [8]
                }
            ],
            "select": {
                "style": 'os'
            },
            "language":
            {
                "search": "",
                "searchPlaceholder": "Search...",
                "emptyTable": "No record found.",
                "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
            },
            "processing": "true",
            "order": [[1, "asc"]],
            "serverSide": "true",
            "lengthMenu": [[1, 10, 20, 50, 100, 1000, -1], [1, 10, 20, 50, 100, 1000, "All"]],
            "pageLength": 10,
            "ajax":
            {
                "url": '@Url.Action("GetData", "GLPostTrans", new { Area = "GLTransaction" })',
                "type": "POST",
                "dataType": "JSON",
                "data": function (d) {
                    d.branchCode = branch,
                    d.dateFrom = fromDate,
                    d.dateTo = toDate
                }
            },
            "columns": [
                {
                    "className": 'details-control',
                    "data": null
                },
                {
                    "data": null, "name": "chkProcess",
                    "render": function (data, type, row) {
                        if (type == 'display') {
                            return '<input type="checkbox" class="editor-chkprocess" id="chkProcess" name="chkProcess">';
                        }
                        return data;
                    }
                },
                { "data": "SCode.Code", "name": "SCode.Code" },
                { "data": "Voucher", "name": "Voucher" },
                {
                    "data": "Entry_Date", "name": "Entry_Date",
                    "render": function (data, type, row, meta) {
                        return moment(row.Entry_Date).format('DD/MMM/YYYY');
                    }
                },
                {
                    "data": "TransDate", "name": "TransDate",
                    "render": function (data, type, row, meta) {
                        return moment(row.TransDate).format('DD/MMM/YYYY');
                    }
                },
                { "data": "OperatorID", "name": "OperatorID" },
                {
                    "data": "LastUpdate", "name": "LastUpdate",
                    "render": function (data, type, row, meta) {
                        return moment(row.LastUpdate).format('DD/MMM/YYYY HH:mm:ss');
                    }
                },
                { "data": "VBranch.BranchCode", "name": "VBranch.BranchCode" }
            ]
        });
        }

        function LoadDataDetail(branch, scode, voucherPar, rowIndexPar) {
            return $("#" + rowIndexPar.toString() + "").DataTable
        ({
            destroy: true,
            "columnDefs": [
                {
                    "targets": 'no-sort',
                    "orderable": false,
                },
                {
                    "width": "10px",
                    "orderable": true,
                    "targets": [0]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [1]
                },
                {
                    "width": "20px",
                    "orderable": true,
                    "targets": [2]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [3]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [4]
                },
                {
                    "width": "400px",
                    "orderable": true,
                    "targets": [5]
                }
            ],
            "select": {
                "style": 'os'
            },
            "language":
            {
                "search": "",
                "searchPlaceholder": "Search...",
                "emptyTable": "No record found.",
                "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
            },
            "processing": "true",
            "order": [[0, "asc"]],
            "serverSide": "true",
            "lengthMenu": [[1, 10, 20, 50, 100, 1000, -1], [1, 10, 20, 50, 100, 1000, "All"]],
            "pageLength": 10,
            "ajax":
            {
                "url": '@Url.Action("GetDataDetail", "Voucher", new { Area = "GLTransaction" })',
                "data": { 'branchCode': branch, 'srcCode': scode, 'voucher': voucherPar },
                "type": "POST",
                "dataType": "JSON"
            },
            "columns": [
                { "data": "Counter", "name": "Counter" },
                { "data": "COA.Account", "name": "COA.Account" },
                { "data": "CCy.CurrencyCode", "name": "CCy.CurrencyCode" },
                { "data": "CashAccount", "name": "CashAccount" },
                { "data": "DocumentNo", "name": "DocumentNo" },
                { "data": "Descrip", "name": "Descrip" },
                { "data": "Debit", "name": "Debit", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                { "data": "Credit", "name": "Credit", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
            ]
        });
        }

        function LoadCreateNewForm() {
            document.location = '@Url.Action("Create","Voucher", new { Area = "GLTransaction" })';
        }

        function LoadEditForm() {
            var form = this;
            var selRow = table.rows('.selected').data();

            if (selRow.length > 0) {
                scode = selRow[0]["SCode"];
                vch = selRow[0]["Voucher"];
                branch = selRow[0]["BranchCode"];

                window.location = '@Url.Action("Edit", "Voucher", new { Area = "GLTransaction" })' + "?sCode=" + scode + "&voucher=" + vch + "&branchCode=" + branch;

                @*$.ajax({
                    type: "GET",
                    url: '@Url.Action("Edit", "Voucher", new { Area = "GLTransaction" })',
                    data: {
                        'sCode': sCode,
                        'voucher': voucher,
                        'branchCode': branch
                    },
                    dataType: 'html',
                    success: function (result) {
                        $('#PartialSection').empty();
                        $("#PartialSection").html(result);
                        $("#modalTitle").html("Edit Data");
                        $("#AccountNo").prop('disabled', true);
                        $("#CCy").prop('disabled', true);
                        $("#CreateEditForm").modal('show');
                    },
                    error: function (status) {
                        alert('');
                    }
                });*@
            }
            else {
                alert("Please select data to be edit");
            }
        }

        function Delete() {
            var form = this;
            var selRow = table.rows('.selected').data();

            if (selRow == null || selRow == 'undefined' || selRow.length == 0) {
                alert("Please select the data you want to delete");
                return false;
            }

            var dataCollection = '';
            var dataAcc = '';

            var includePosted = false;

            $.each(selRow, function (index, row) {
                if (Boolean(row["PostedStatus"]) == true) {
                    includePosted = true;
                }
                dataAcc += row["SCode"] + ';' + row["Voucher"] + ';' + row["BranchCode"] + '|';
                dataCollection += '[' + row["SCode"] + '][' + row["Voucher"] + '][' + row["BranchCode"] + ']' + "\n";
            })

            if (includePosted) {
                alert("One or more selected voucher are posted and can not be delete. Delete process canceled by system.");
                return false;
            }

            var answer = confirm("You are about to delete data:\n" + dataCollection + "\nAre you sure want to delete the data ?");

            if (answer) {
                if (dataCollection.length > 0) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Delete", "Voucher", new { Area = "GLTransaction" })',
                        data: { "voucherCollection": dataAcc },
                        dataType: 'JSON',
                        success: function (respond) {
                            switch (respond) {
                                case "NoAccess":
                                    window.location.href = '@Server.MapPath("~/Views/Shared/View403.cshtml")'
                                    break;
                                case "Success":
                                    alert(respond);
                                    window.location.href = '@Url.Action("index", "Voucher", new { Area = "GLTransaction" })'
                                    break;
                                default:
                                    alert(respond);
                                    window.location.href = '@Url.Action("index", "Voucher", new { Area = "GLTransaction" })'
                                    break;
                            }

                        },
                        error: function (respond, xhr, msg) {
                            alert(msg);
                        }
                    })
                }
            }
            else {
                return false;
            }

        }

        function Refresh() {
            //table.ajax.reload(null, false);
            table = LoadData($("#cboBranchCode").val(), ($("#txtFromDate").val() == '' ? null : moment($("#txtFromDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD'))
                , ($("#txtToDate").val() == '' ? null : moment($("#txtToDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD')));
        }

        function Process() {
            var data = table.rows(function (idx, data, node) {
                // Get all the checkboxes in the row
                var cells = $(node).find("input[type='checkbox'][id='chkProcess']");
                // Keep the rows with checked checkboxes
                return checkedTargets(cells).length;
            }).data();

            if (data == null || data == 'undefined' || data.length == 0) {
                alert("Please select the data you want to Posting");
                return false;
            }

            var branchCode = "";
            var dataSCode = "";
            var dataVoucher = "";
            var dataRP = "";
            var dataCollection = '';

            $.each(data, function (index, rowId) {
                branchCode += rowId["VBranch"]["BranchCode"] + ',';
                dataSCode += rowId["SCode"]["Code"] + ',';
                dataVoucher += rowId["Voucher"] + ',';
                dataRP += rowId["SCode"]["Code"] + ',';
                dataCollection += '[' + rowId["VBranch"]["BranchCode"] + '] - ' + '[' + rowId["Voucher"] + '] - ' + '[' + rowId["SCode"]["Code"] + ']'+ "\n";
            })

            function checkedTargets(checkboxes) {
                return checkboxes.filter(function (index) {
                    return $(checkboxes[index]).prop('checked');
                });
            }
            

            var answer = confirm("You are about to posting data:\n" + dataCollection + "\nAre you sure want to posting the data ?");

            if (answer) {
                if (dataCollection.length > 0) {
                    modalProcess();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Posting", "GLPostTrans", new { Area = "GLTransaction" })',
                        data: { "branchCodeList": branchCode, "scodeList": dataSCode, "voucherList": dataVoucher, "rpList": dataRP },
                        dataType: 'JSON',
                        success: function (respond) {
                            $('#loadingModal').modal('hide');
                            switch (respond) {
                                case "NoAccess":
                                    window.location.href = '@Server.MapPath("~/Views/Shared/View403.cshtml")'
                                    break;
                                case "Success":
                                    table = LoadData($("#cboBranchCode").val(), ($("#txtFromDate").val() == '' ? null : moment($("#txtFromDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD'))
                                    , ($("#txtToDate").val() == '' ? null : moment($("#txtToDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD')));
                                    alert(respond);
                                    @*window.location.href = '@Url.Action("index", "City", new { Area = "GeneralTable" })'*@
                                    break;
                                default:
                                    table = LoadData($("#cboBranchCode").val(), ($("#txtFromDate").val() == '' ? null : moment($("#txtFromDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD'))
                                    , ($("#txtToDate").val() == '' ? null : moment($("#txtToDate").val(), 'DD/MMM/YYYY').format('YYYY-MM-DD')));
                                    alert(respond);
                                    @*window.location.href = '@Url.Action("index", "City", new { Area = "GeneralTable" })'*@
                                    break;
                            }

                        },
                        error: function (respond) {
                            $('#loadingModal').modal('hide');
                            alert(respond);
                        }
                    })
                }

                $('#loadingModal').modal('hide');
            }
            else {
                return false;
            }
        }

    </script>
}