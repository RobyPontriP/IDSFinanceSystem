@model IEnumerable<IDS.Sales.CustomerOutstanding>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Customer Outstanding List";
}

@section Styles {
    <link rel="stylesheet" href="~/Content/DataTables/datatables.css" />
    <link rel="stylesheet" href="~/Content/DataTables/DataTables-1.10.25/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="~/Content/DataTables/Select-1.3.3/css/select.bootstrap5.min.css" />
    <link rel="stylesheet" href="~/Content/DataTables/Responsive-2.2.9/css/responsive.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/flatpickr/flatpickr.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/flatpickr/plugins/monthSelect/style.css" />
}

<div class="row mb-2">
    <div class="col-sm-6 col-md-6 col-6">
        <h4>@ViewBag.Title</h4>
    </div>
</div>

<div class="row mb-0">
    <div class="row mb-1 col-sm-2">
        <label for="PeriodIndex" class="col-sm-3 col-form-label col-form-label-sm">Period</label>
        <div class="col-sm-8">
            @Html.TextBox("Period", "", new { @id = "PeriodIndex", @class = "form-control form-control-sm bg-white col-sm-12" })
        </div>
    </div>

    <div class="row mb-1 col-sm-7">
        <div class="col-sm-6">
            <button type="button" onclick="RecalculateOuts()" class="btn btn-outline-info col-sm-8 form-control-sm" id="btnTaxInv">Recalculate Outstanding</button>
        </div>
    </div>
</div>



<div class="table-responsive table-responsive-sm p-2 bg-white border">
    <table id="tableData" class="table table-bordered table-hover w-100">
        <thead>
            <tr>
                <th></th>
                <th>Customer Code</th>
                <th>Month</th>
                <th>Year</th>
                <th>CCY</th>
                <th>Beg. Balance</th>
                <th>Debit</th>
                <th>Credit</th>
                <th>End. Balance</th>
            </tr>
        </thead>
    </table>
</div>

<div id="PartialSection">

</div>

@section Scripts {
    <script src="~/Scripts/moment.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/DataTables-1.10.25/js/dataTables.bootstrap5.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/Select-1.3.3/js/select.bootstrap5.js"></script>
    <script type="text/javascript" src="~/Content/flatpickr/flatpickr.min.js"></script>
    <script type="text/javascript" src="~/Content/flatpickr/id.min.js"></script>
    <script type="text/javascript" src="~/Content/flatpickr/plugins/monthSelect/Index.js"></script>

    <script type="text/javascript">
        var PeriodValue = $("#PeriodIndex").val();
        var table = null;

        $(document).ready(function () {
            flatpickr("#PeriodIndex", {
                shorthand: true,
                dateFormat: "M-Y",
                altFormat: "F Y",
                defaultDate: ["today"],
                static: true,
                plugins: [new monthSelectPlugin({
                    shorthand: true, //defaults to false
                    dateFormat: "M Y", //defaults to "F Y"
                    altFormat: "F Y"
                })],
            });

            table = LoadData(PeriodValue);
        });

        function RecalculateOuts() {
            var data = table.rows(function (idx, data, node) {
                // Get all the checkboxes in the row
                var cells = $(node).find("input[type='checkbox'][id='chkProcess']");
                // Keep the rows with checked checkboxes
                return checkedTargets(cells).length;
            }).data();

            var dataCust = "";

            $.each(data, function (index, rowId) {
                dataCust += rowId["Customer"]["CUSTCode"] + ',';
            })

            function checkedTargets(checkboxes) {
                return checkboxes.filter(function (index) {
                    return $(checkboxes[index]).prop('checked');
                });
            }

            var answer = confirm("are you sure want to Recalculate Outstanding at Period " + $('#PeriodIndex').val() + " ?");

            if (answer) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RecalcOutstanding", "CustOutstanding", new { Area = "Sales" })',
                    dataType: 'json',
                    data: { period: $("#PeriodIndex").val() },
                    success: function (respond) {
                        if (respond == '') {
                            alert("Recalculate Success!");
                        } else {
                            alert(respond);
                        }

                    }
                });
            }
            
        }

        function LoadData(PeriodValue) {
            return $('#tableData').DataTable
        ({
            destroy: true,
            "columnDefs": [
                {
                    "targets": 'no-sort',
                    "orderable": false,
                },
                {
                    "data": null,
                    "width": "20px",
                    "defaultContent": '',
                    "orderable": false,
                    "className": "select-checkbox",
                    "checkboxes": {
                        "selectRow": true
                    },
                    "targets": [0]
                },
                {
                    "width": "100",
                    "orderable": true,
                    "targets": [1]
                },
                {
                    "width": "10px",
                    "orderable": true,
                    "targets": [2]
                },
                {
                    "width": "10px",
                    "orderable": true,
                    "targets": [3]
                },
                {
                    "width": "10px",
                    "orderable": true,
                    "targets": [4]
                }
            ],
            "select": {
                "style": 'os'
            },
            "language":
            {
                "search": "",
                "searchPlaceholder": "Search...",
                "emptyTable": "No record found.",
                "decimal": ",",
                "thousands": ".",
                "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
            },
            "processing": "true",
            "order": [[1, "asc"]],
            "serverSide": "true",
            "lengthMenu": [[1, 10, 20, 50, 100, 1000, -1], [1, 10, 20, 50, 100, 1000, "All"]],
            "pageLength": 10,
            "ajax":
            {
                "url": '@Url.Action("GetData", "CustOutstanding", new { Area = "Sales" })',
                "data": { 'period': PeriodValue },
                "type": "POST",
                "dataType": "JSON"
            },
            "columns": [
                { "data": null },
                { "data": "Customer.CUSTCode", "name": "Customer.CUSTCode" },
                { "data": "Month", "name": "Month" },
                { "data": "Year", "name": "Year" },
                { "data": "CCy.CurrencyCode", "name": "CCy.CurrencyCode" },
                { "data": "BegBal", "name": "BegBal", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                { "data": "Debit", "name": "Debit", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                { "data": "Credit", "name": "Credit", "render": $.fn.dataTable.render.number(',', '.', 2, '') },
                { "data": "EndBal", "name": "EndBal", "render": $.fn.dataTable.render.number(',', '.', 2, '') }
            ]
        });
        }

        $('#PeriodIndex').change(function () {
            PeriodValue = $(this).val();
            table = LoadData(PeriodValue);
        });

    </script>
}
