@model IDS.GLTable.SourceCode

<div class="modal fade" id="CreateEditForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle"></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm(null, null, FormMethod.Get, new { @id = "formCreateEdit" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.Hidden("FormAction", Convert.ToInt32(ViewData["FormAction"]))
                    @Html.Hidden("FormSave", "0");

                    <script type="text/javascript">
                        $('form#formCreateEdit').removeData("validator");
                        $('form#formCreateEdit').removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse($('form#formCreateEdit'));
                    </script>

                    <div class="form-group row label">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control form-control-sm", maxlength = 4, placeholder = "Source Code" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @id = "valSourceCode", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control form-control-sm", @maxlength = 30, placeholder = "Source Code Description" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    if (Convert.ToInt32(ViewData["FormAction"]) == 2)
                    {
                        <div class="form-group row text-sm-left">

                            @Html.LabelFor(model => model.OperatorID, "Operator ID", htmlAttributes: new { @class = "col-form-label-sm col-sm-2" })
                            <div class="col-sm-3">
                                @Html.EditorFor(model => model.OperatorID, new { htmlAttributes = new { @class = "form-control form-control-sm", name = "OperatorID", placeholder = "Operator ID", disabled = true } })
                                @Html.ValidationMessageFor(model => model.OperatorID, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.LastUpdate, "Last Update", htmlAttributes: new { @class = "col-form-label-sm col-sm-2" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.LastUpdate, new { @Value = Model.LastUpdate.ToString("dd/MMM/yyyy HH:mm:ss"), @class = "form-control form-control-sm", name = "LastUpdate", placeholder = "Last Update", disabled = true })
                                @Html.ValidationMessageFor(model => model.LastUpdate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" title="Input New Source Code" id="btnAddNew">Add New</button>
                <button type="button" class="btn btn-primary" title="Save Source Code" id="btnSave">Save</button>
                <button type="button" class="btn btn-danger" title="Close This Form" id="btnClose" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSave").click(function () {
            if(!$("form#formCreateEdit").valid())
            {
                return false;
            }
            var confirmText = "";
            if ($("#FormAction").val() == 1) {
                confirmText = ("Are you sure want to save data ?");
            } else {
                confirmText = ("Are you sure want to edit Source Code : " + $("#Code").val() + " ?");
            }
            var answer = confirm(confirmText);

            if (answer) {
                if ($("#FormAction").val() == 1) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "SourceCode", new { Area = "GLTable" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            LoadData();
                            $("#FormSave").val("1");
                            alert(respond);
                        }
                    });
                }
                else {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Edit", "SourceCode", new { Area = "GLTable" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            LoadData();
                            $("#FormSave").val("1");
                            alert(respond);
                        }
                    });
                }
            }

        }),

        $("#btnClose, .close").click(function () {
            $('#loadingModal').modal('hide');
            $("#CreateEditForm").modal('hide');
            if ($("#FormSave").val() == "1") {
                @*window.location.href = '@Url.Action("index", "SourceCode", new { Area = "GLTable" })';*@
            }
        }),

        $("#btnAddNew").click(function () {
            if (!$('#Code, #Description').val() == "") {
                var answer = confirm("Are you sure want to clear this form ?");

                if (answer) {
                    $("form#formCreateEdit").trigger("reset");
                    $(':input', '#formCreateEdit').not(':button, :submit, :reset, :hidden').val('');
                    $('#Code').prop('readonly', false);
                    $("#FormAction").val("1");
                    $("#FormSave").val("1");
                }
                else {
                    e.preventDefault();
                }
            }
            else {
                e.preventDefault();
            }
        })
    });

    $('#CreateEditForm').on('hidden.bs.modal', function (e) {
        $('#loadingModal').modal('hide');
    })

</script>