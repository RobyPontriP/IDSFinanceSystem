@model IEnumerable<IDS.GLTable.ChartOfAccount>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Chart of Account List";
}

@{
    Html.RenderPartial("_ProgressPage");
}

@section Styles {
    <link rel="stylesheet" href="~/Content/DataTables/datatables.css" />
    <link rel="stylesheet" href="~/Content/DataTables/DataTables-1.10.25/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="~/Content/DataTables/Select-1.3.3/css/select.bootstrap5.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/flatpickr/flatpickr.min.css" />

    <style type="text/css">
        .tree {
            background: #EEE;
            color: white;
            font-size: 12px;
            height: 100%;
            padding: 5px;
        }

            .tree a {
                text-decoration-style: none;
                color: #28a745;
                font-weight: 300;
            }

        .file {
            color: #eee;
            display: block;
            list-style: none;
        }

        .folder {
            list-style: none;
            cursor: pointer;
            margin: 4px 0;
        }

            .folder > ul {
                display: none;
                list-style: none;
            }

            .folder::before {
                padding: 2px 4px 4px 4px;
                height: 14px;
                width: 14px;
                text-align: center;
                line-height: 10px;
                background: #fd7e14;
                border-radius: 10px;
                display: inline-block;
                content: '+';
                margin-right: 10px;
            }

            .folder.folder-open {
            }

                .folder.folder-open > ul {
                    display: block;
                    padding-left: 15px;
                    margin-left: 7px;
                    border-left: 1px solid #fd7e14;
                }

                .folder.folder-open::before {
                    content: '-';
                    margin-right: 10px;
                }

        li:before {
            border-radius: 10px !important;
            list-style: none;
        }
    </style>
}

@*<div class="row">
        <div class="col-sm-6 col-md-6 col-6">
            <h4>@ViewData["Title"]</h4>
        </div>
        <div class="col-sm-6 col-md-6 col-6 text-right">
            <p>
                @{
                    if (Convert.ToInt32(ViewData["Page.Insert"]) == 1)
                    {
                        <a href="#" class="btn btn-sm btn-primary" onclick="LoadCreateNewForm()" id="btnCreate">
                            <i class="fas fa-plus"></i>
                        </a>
                    }
                    else
                    {
                        <a href="#" class="btn btn-sm btn-primary" onclick="NoAccess()">
                            <i class="fas fa-plus"></i>
                        </a>
                    }

                    if (Convert.ToInt32(ViewData["Page.Edit"]) == 1)
                    {
                        <a class="btn btn-sm btn-info" onclick="LoadEditForm()">
                            <i class="fas fa-edit"></i>
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-sm btn-info" onclick="NoAccess()" disabled="disabled">
                            <i class="fas fa-edit"></i>
                        </a>
                    }

                    if (Convert.ToInt32(ViewData["Page.Delete"]) == 1)
                    {
                        <a onclick="Delete()" class="btn btn-sm btn-danger" href="#">
                            <i class="fas fa-trash"></i>
                        </a>
                    }
                    else
                    {
                        <a onclick="Delete()" class="btn btn-sm btn-danger" href="#">
                            <i class="fas fa-trash"></i>
                        </a>
                    }
                }
            </p>
        </div>
    </div>*@


@*<div class="" style="width: auto;">
        <div class="row">
            <div class="float-start" style="width:10%; min-width: 100px; max-width: 150px; background-color: #EEE;">
                <div class="FilterAll">
                    <a href="#" onclick="setH(null)">All</a>
                </div>

                <div class="tree">
                    @if (ViewData["AccNode"] != null)
                    {
                        @Html.Raw(ViewData["AccNode"]);
                    }
                </div>
            </div>
            <div class="float-end" style="width: 90%;">
                <div class="table-responsive table-responsive-sm p-2 bg-white border">
                    <table id="tableData" class="table table-bordered table-hover w-100">
                        <thead>
                            <tr class="align-top">
                                <th valign="middle"></th>
                                <th class="align-middle">Acc. No</th>
                                <th class="align-middle">CCY</th>
                                <th class="align-middle">Name</th>
                                <th class="align-middle">Level</th>
                                <th class="align-middle">Total / Detail</th>
                                <th class="text-center align-middle">Acc. Group</th>
                                <th class="align-middle">Operator</th>
                                <th class="align-middle">Last Update</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="float-none">&nbsp;</div>
        </div>
    </div>*@

@*<div class="modal fade" id="loadingModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered d-flex justify-content-center" role="document">
            <div class="d-flex flex-column align-items-center justify-content-center">
                <div class="row">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <div class="row">
                    <strong>Please Wait...</strong>
                </div>
            </div>
        </div>
    </div>*@

<!-- Mulai -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <section class="col-lg-12 connectedSortable">
                <div class="card">
                    <div class="card-header">
                        <h3 id="btnjf1" class="card-title">
                            <!--  <i class="fas fa-user mr-1" style="color:#4cff00 !important;"></i>-->
                            @ViewBag.Title
                        </h3>
                        <div class="card-tools">

                            <ul class="nav nav-pills ml-auto" id="sortablex">
                                <li class="nav-item mr-1">
                                    @{
                                        if (Convert.ToInt32(ViewData["Page.Insert"]) == 1)
                                        {
                                            <a href="#" class="btn btn-sm btn-primary" title="Input Chart of Account" onclick="LoadCreateNewForm()" id="btnCreate">
                                                <i class="fas fa-plus"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="#" class="btn btn-sm btn-primary" title="Input Chart of Account" onclick="NoAccess()">
                                                <i class="fas fa-plus"></i>
                                            </a>
                                        }
                                    }
                                </li>
                                <li class="nav-item mr-1">
                                    @{
                                        if (Convert.ToInt32(ViewData["Page.Edit"]) == 1)
                                        {
                                            <a class="btn btn-sm btn-info" title="Edit Chart of Account" onclick="LoadEditForm()">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="btn btn-sm btn-info" title="Edit Chart of Account" onclick="NoAccess()" disabled="disabled">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        }
                                    }
                                </li>
                                <li class="nav-item mr-1">
                                    @{
                                        if (Convert.ToInt32(ViewData["Page.Delete"]) == 1)
                                        {
                                            <a onclick="Delete()" title="Delete Chart of Account" class="btn btn-sm btn-danger" href="#">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a onclick="Delete()" title="Delete Chart of Account" class="btn btn-sm btn-danger" href="#">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                    }
                                </li>
                            </ul>

                        </div>
                    </div><!-- /.card-header -->
                    <div class="card-body">
                        <div class="tab-content p-0">
                            <div class="row mb-1">
                                <section class="col-lg-2 connectedSortable">
                                    <div class="FilterAll">
                                        <a href="#" onclick="setH(null)">All</a>
                                    </div>

                                    <div class="tree">
                                        @if (ViewData["AccNode"] != null)
                                        {
                                            @Html.Raw(ViewData["AccNode"]);
                                        }
                                    </div>
                                </section>
                                <section class="col-lg-10 connectedSortable">
                                    <div class="table-responsive table-responsive-sm p-2 bg-white border">
                                        <table id="tableData" class="table table-bordered table-hover w-100">
                                            <thead>
                                                <tr class="align-top">
                                                    <th valign="middle"></th>
                                                    <th class="align-middle">Acc. No</th>
                                                    <th class="align-middle">CCY</th>
                                                    <th class="align-middle">Name</th>
                                                    <th class="align-middle">Level</th>
                                                    <th class="align-middle">Total / Detail</th>
                                                    <th class="text-center align-middle">Acc. Group</th>
                                                    <th class="align-middle">Operator</th>
                                                    <th class="align-middle">Last Update</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </section>
                            </div>
                        </div>
                    </div><!-- /.card-body -->
                </div>
            </section>
            <div class="float-none">&nbsp;</div>
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</section>

<div class="modal fade" id="loadingModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered d-flex justify-content-center" role="document">
        <div class="d-flex flex-column align-items-center justify-content-center">
            <div class="row">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <div class="row">
                <strong>Please Wait...</strong>
            </div>
        </div>
    </div>
</div>

<div id="PartialSection">

</div>

@section Scripts {
    <script src="~/Scripts/moment.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/DataTables-1.10.25/js/dataTables.bootstrap5.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/Select-1.3.3/js/select.bootstrap5.js"></script>
    <script src="~/Content/flatpickr/flatpickr.min.js"></script>
    <script src="~/Content/flatpickr/id.min.js"></script>
    <script type="text/javascript" src="~/Scripts/GeneralDataTable.js"></script>

    <script type="text/javascript">

        $(function () {
            $('.folder').on('click', function (e) {
                $(this).toggleClass('folder-open');
                e.stopPropagation();
            });

            $('.file').on('click', function (e) {
                e.stopPropagation();
            });
        })

        var table = null;

        $(document).ready(function () {
            LoadData();
        });

        function LoadData() {
            //modalProcess();
            //$('#loadingModal').modal('show');
            table = LoadDT(httpGet('POST', '@Url.Action("GetData", "ChartOfAccount", new { Area = "GLTable" })'));
            //$('#loadingModal').modal('hide');
        }

        function LoadDT(dataJS) {
            return $('#tableData').DataTable({
                "bDestroy": true,
                "language":
                {
                    "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
                },
                "sDom": "B<'row'><'row'<'col-md-6'l><'col-md-6'f>r>t<'row'<'col-md-4'i>><'row'<'#colvis'>p>",
                "buttons": [
                {
                    text: 'Show Acc. Trans',
                    action: function (e, dt, node, config) {
                        @*window.location = '@Url.Action("TransByAccount", "ChartOfAccount", new { Area = "GLTable" })';*@

                        var form = this;
                        var selRow = table.rows('.selected').data();
                        
                        if (selRow.length > 0) {
                            var url = '@Url.Action("TransByAccount", "ChartOfAccount", new { Area = "GLTable" })';
                            var selAccount = selRow[0]["Account"];
                            var selBranch = '@Session[IDS.Tool.GlobalVariable.SESSION_USER_BRANCH_CODE]';
                            var selCCy = selRow[0]["CCy"];
                            var selPeriod = '@DateTime.Now.ToString("yyyyMM")';
                            
                            var form = $('<form action="' + url + '" method="post">');
                            var param = selBranch + '|' + selPeriod + '|' + selAccount + '|' + selCCy;
                            var paramEncrypt = '@IDS.Tool.UrlEncryption.EncryptParam("param")';
                            //alert(paramEncrypt);
                            form.append('<input type="hidden" name="branchCode" value="' + selBranch + '" />');
                            form.append('<input type="hidden" name="dPeriod" value="' + selPeriod + '" />');
                            form.append('<input type="hidden" name="account" value="' + selAccount + '" />');
                            form.append('<input type="hidden" name="ccy" value="' + selCCy + '" />');
                            form.append('</form>');
                            $('body').append(form);
                            form.submit();

                            //alert('ss');

                        }
                        else {
                            alert("Please select data to view transaction by account");
                        }
                    }
                }
                ],
                "processing": "true",
                data: JSON.parse(dataJS),
                "columns": [
                { "data": null },
                { "data": "Account", "name": "Account" },
                { "data": "CCy", "name": "CCy" },
                { "data": "AccountName", "name": "AccountName" },
                { "data": "Level", "name": "Level" },
                {
                    "data": "AccountTotalDetail", "name": "AccountTotalDetail",
                    "render": function (data, type, row, meta) {
                        if (data == '1') {
                            return 'Total';
                        }
                        else {
                            return 'Detail';
                        }
                        return data;

                        //if (data == '1') {
                        //    return '<input type="checkbox" class="editor-active" onclick="return false;" checked>';
                        //} else {
                        //    return '<input type="checkbox" onclick="return false;" class="editor-active">';
                        //}
                        //return data;
                    }
                },
                { "data": "AccountGroup", "name": "AccountGroup" },
                { "data": "OperatorID", "name": "OperatorID" },
                {
                    "data": "LastUpdate", "name": "LastUpdate",
                    "render": function (data, type, row, meta) {
                        return moment(row.LastUpdate).format('DD/MMM/YYYY HH:mm:ss');
                    }
                },
                ],
                "order": [[1, "asc"]],
                "lengthMenu": [[1, 10, 25, 50, -1], [1, 10, 25, 50, "All"]],
                "pageLength": 10,
                "columnDefs": [
                {
                    "targets": 'no-sort',
                    "orderable": false,
                },
                {
                    "data": null,
                    "width": "20px",
                    "defaultContent": '',
                    "orderable": false,
                    "className": "select-checkbox",
                    "checkboxes": {
                        "selectRow": true
                    },
                    "targets": [0]
                },
                {
                    "width": "50px",
                    "orderable": true,
                    "targets": [1]
                },
                {
                    "width": "20px",
                    "orderable": true,
                    "targets": [2]
                },
                {
                    "width": "250px",
                    "orderable": true,
                    "targets": [3]
                },
                {
                    "width": "25px",
                    "orderable": true,
                    "targets": [4]
                },
                {
                    "width": "35px",
                    "orderable": "true",
                    "class": "text-center",
                    "targets": [5]
                },
                {
                    "width": "100px",
                    "orderable": true,
                    "targets": [6]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [7]
                },
                {
                    "width": "100px",
                    "orderable": true,
                    "targets": [8]
                }
                ],
                "select": {
                    "style": 'os'
                },
                "buttons": [
                {
                    text: 'Show Acc. Trans',
                    action: function (e, dt, node, config) {
                        @*window.location = '@Url.Action("TransByAccount", "ChartOfAccount", new { Area = "GLTable" })';*@

                        var form = this;
                        var selRow = table.rows('.selected').data();

                        if (selRow.length > 0) {
                            var url = '@Url.Action("TransByAccount", "ChartOfAccount", new { Area = "GLTable" })';
                            var selAccount = selRow[0]["Account"];
                            var selBranch = '@Session[IDS.Tool.GlobalVariable.SESSION_USER_BRANCH_CODE]';
                            var selCCy = selRow[0]["CCy"];
                            var selPeriod = '@DateTime.Now.ToString("yyyyMM")';

                            var form = $('<form action="' + url + '" method="post">');
                            var param = selBranch + '|' + selPeriod + '|' + selAccount + '|' + selCCy;
                            var paramEncrypt = '@IDS.Tool.UrlEncryption.EncryptParam("param")';
                            //alert(paramEncrypt);
                            form.append('<input type="hidden" name="branchCode" value="' + selBranch + '" />');
                            form.append('<input type="hidden" name="dPeriod" value="' + selPeriod + '" />');
                            form.append('<input type="hidden" name="account" value="' + selAccount + '" />');
                            form.append('<input type="hidden" name="ccy" value="' + selCCy + '" />');
                            form.append('</form>');
                            $('body').append(form);
                            form.submit();

                            //alert('ss');

                        }
                        else {
                            alert("Please select data to view transaction by account");
                        }
                    }
                }
            ]
            });
        }

        @*var table = $('#tableData').DataTable
        ({
            "columnDefs": [
                {
                    "targets": 'no-sort',
                    "orderable": false,
                },
                {
                    "data": null,
                    "width": "20px",
                    "defaultContent": '',
                    "orderable": false,
                    "className": "select-checkbox",
                    "checkboxes": {
                        "selectRow": true
                    },
                    "targets": [0]
                },
                {
                    "width": "50px",
                    "orderable": true,
                    "targets": [1]
                },
                {
                    "width": "20px",
                    "orderable": true,
                    "targets": [2]
                },
                {
                    "width": "250px",
                    "orderable": true,
                    "targets": [3]
                },
                {
                    "width": "25px",
                    "orderable": true,
                    "targets": [4]
                },
                {
                    "width": "35px",
                    "orderable": "true",
                    "class": "text-center",
                    "targets": [5]
                },
                {
                    "width": "100px",
                    "orderable": true,
                    "targets": [6]
                },
                {
                    "width": "60px",
                    "orderable": true,
                    "targets": [7]
                },
                {
                    "width": "100px",
                    "orderable": true,
                    "targets": [8]
                }
            ],
            //"sDom": "B<'row'><'row'<'col-md-6'l><'col-md-6'f>r>t<'row'<'col-md-4'i>><'row'<'#colvis'>p>",
            "sDom": "B<'row'><'row'<'col-md-6'l><'col-md-6'f>r>t<'row'<'col-md-4'i>><'row'<'#colvis'>p>",
            //"dom": "B<'row'>lf<t>ip>",
            "buttons": [
                {
                    text: 'Show Acc. Trans',
                    action: function (e, dt, node, config) {
                        @*window.location = '@Url.Action("TransByAccount", "ChartOfAccount", new { Area = "GLTable" })';

                        var form = this;
                        var selRow = table.rows('.selected').data();

                        if (selRow.length > 0) {
                            var url = '@Url.Action("TransByAccount", "ChartOfAccount", new { Area = "GLTable" })';
                            var selAccount = selRow[0]["Account"];
                            var selBranch = '@Session[IDS.Tool.GlobalVariable.SESSION_USER_BRANCH_CODE]';
                            var selCCy = selRow[0]["CCy"];
                            var selPeriod = '@DateTime.Now.ToString("yyyyMM")';

                            var form = $('<form action="' + url + '" method="post">');
                            var param = selBranch + '|' + selPeriod + '|' + selAccount + '|' + selCCy;
                            var paramEncrypt = '@IDS.Tool.UrlEncryption.EncryptParam("param")';
                            //alert(paramEncrypt);
                            form.append('<input type="hidden" name="branchCode" value="' + selBranch + '" />');
                            form.append('<input type="hidden" name="dPeriod" value="' + selPeriod + '" />');
                            form.append('<input type="hidden" name="account" value="' + selAccount + '" />');
                            form.append('<input type="hidden" name="ccy" value="' + selCCy + '" />');
                            form.append('</form>');
                            $('body').append(form);
                            form.submit();

                            //alert('ss');

                        }
                        else {
                            alert("Please select data to view transaction by account");
                        }
                    }
                }
            ],
            "select": {
                "style": 'os'
            },
            "language":
            {
                "search": "",
                "searchPlaceholder": "Search...",
                "emptyTable": "No record found.",
                "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
            },
            "processing": "true",
            "order": [[1, "asc"]],
            "serverSide": "true",
            "lengthMenu": [[1, 10, 20, 50, 100, 1000, -1], [1, 10, 20, 50, 100, 1000, "All"]],
            "pageLength": 10,
            "ajax":
            {
                "url": '@Url.Action("GetData", "ChartOfAccount", new { Area = "GLTable" })',
                "type": "POST",
                "dataType": "JSON"
            },
            "columns": [
                { "data": null},
                { "data": "Account", "name": "Account" },
                { "data": "CCy", "name": "CCy" },
                { "data": "AccountName", "name": "AccountName" },
                { "data": "Level", "name": "Level" },
                {
                    "data": "AccountTotalDetail", "name": "AccountTotalDetail",
                    "render": function (data, type, row, meta) {
                        if (data == '1') {
                            return 'Total';
                        }
                        else {
                            return 'Detail';
                        }
                        return data;

                        //if (data == '1') {
                        //    return '<input type="checkbox" class="editor-active" onclick="return false;" checked>';
                        //} else {
                        //    return '<input type="checkbox" onclick="return false;" class="editor-active">';
                        //}
                        //return data;
                    }
                },
                { "data": "AccountGroup", "name": "AccountGroup" },
                { "data": "OperatorID", "name": "OperatorID" },
                {
                    "data": "LastUpdate", "name": "LastUpdate",
                    "render": function (data, type, row, meta) {
                        return moment(row.LastUpdate).format('DD/MMM/YYYY HH:mm:ss');
                    }
                },
            ]
        });*@

        function setH(e) {
            if (e && e !== undefined) {
                table = LoadDT(httpGet('POST', '@Url.Action("GetData", "ChartOfAccount", new { Area = "GLTable" })', JSON.stringify({ 'setParent': e })));
                @*table.ajax.url('@Url.Action("GetData", "ChartOfAccount", new { Area = "GLTable" })?setParent=' + e).load();*@
            }
            else {
                table = LoadDT(httpGet('POST', '@Url.Action("GetData", "ChartOfAccount", new { Area = "GLTable" })'));
                @*table.ajax.url('@Url.Action("GetData", "ChartOfAccount", new { Area = "GLTable" })').load();*@
            }
        }

        function LoadCreateNewForm() {
            modalProcess();
            var dateNow = new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate();
            $.ajax({
                type: "GET",
                url: '@Url.Action("Create", "ChartOfAccount", new { Area = "GLTable" })',
                contentType: 'application/html; charset=utf-8',
                dataType: 'html',
                success: function (result) {
                    $('#loadingModal').modal('hide');
                    $('#PartialSection').empty();
                    $("#PartialSection").html(result);
                    $("#modalTitle").html("Create Data");

                    $("#CreateEditForm").modal('show');
                    $("#CreateEditForm").modal('toggle');
                },
                error: function (status) {
                    alert('');
                }
            });
        }

        function LoadEditForm() {
            var form = this;
            var selRow = table.rows('.selected').data();

            if (selRow.length > 0) {
                accNo = selRow[0]["Account"];
                ccy = selRow[0]["CCy"];
                modalProcess();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("Edit", "ChartOfAccount", new { Area = "GLTable" })',
                    data: {
                        'accNo': accNo,
                        'ccy': ccy
                    },
                    dataType: 'html',
                    success: function (result) {
                        $('#loadingModal').modal('hide');

                        $('#PartialSection').empty();
                        $("#PartialSection").html(result);
                        $("#modalTitle").html("Edit Data");
                        $("#AccountNo").prop('disabled', true);
                        $("#CCy").prop('disabled', true);
                        $("#CreateEditForm").modal('show');
                    },
                    error: function (status) {
                        alert('');
                    }
                });
            }
            else {
                alert("Please select data to be edit");
            }
        }

        function Delete() {
            var form = this;
            var selRow = table.rows('.selected').data();

            if (selRow == null || selRow == 'undefined' || selRow.length == 0) {
                alert("Please select the data you want to delete");
                return false;
            }

            var dataCollection = '';
            var dataAcc = '';

            $.each(selRow, function (index, row) {
                dataAcc += row["Account"] + ';' + row["CCy"] + '|';
                dataCollection += '[' + row["Account"] + '][' + row["CCy"] + '] - ' + row["AccountName"] +  "\n";
            })

            var answer = confirm("You are about to delete data:\n" + dataCollection + "\nAre you sure want to delete the data ?");

            if (answer) {
                if (dataCollection.length > 0) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Delete", "ChartOfAccount", new { Area = "GLTable" })',
                        data: { "datas": dataAcc },
                        dataType: 'JSON',
                        success: function (respond) {
                            switch (respond) {
                                case "NoAccess":
                                    window.location.href = '@Server.MapPath("~/Views/Shared/View403.cshtml")'
                                    break;
                                case "Success":
                                    alert(respond);
                                    LoadData();
                                    @*window.location.href = '@Url.Action("index", "ChartOfAccount", new { Area = "GLTable" })'*@
                                    break;
                                default:
                                    alert(respond);
                                    LoadData();
                                    @*window.location.href = '@Url.Action("index", "ChartOfAccount", new { Area = "GLTable" })'*@
                                    break;
                            }

                        },
                        error: function (respond) {
                            alert(respond);
                        }
                    })
                }
            }
            else {
                return false;
            }

        }

        //function modalProcess() {
        //    $('#loadingModal').modal({ backdrop: 'static', keyboard: false })
        //    $('#loadingModal').modal('show');
        //    setTimeout(function () {
        //        $('#loadingModal').modal('hide');
        //    });
        //}


    </script>
}
