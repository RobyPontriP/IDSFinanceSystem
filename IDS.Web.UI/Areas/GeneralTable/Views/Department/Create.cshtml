@model IDS.GeneralTable.Department

<style type="text/css">
    .select2-container {
        width: 100% !important;
    }
</style>

<div class="modal fade" id="CreateEditForm" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle"></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "formCreateEdit" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.Hidden("FormAction", Convert.ToInt32(ViewData["FormAction"]))
                    @Html.Hidden("FormSave", "0");
                    @Html.Hidden("DefBranch", ViewData["DefaultBranch"].ToString());
                    @Html.Hidden("HOStatus", Convert.ToInt32(ViewData["HOStatus"]));

                    <script type="text/javascript">
                        $('form#formCreateEdit').removeData("validator");
                        $('form#formCreateEdit').removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse($('form#formCreateEdit'));
                    </script>

                    <div class="form-group row label">
                        @Html.LabelFor(model => model.DepartmentCode, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.DepartmentCode, new { htmlAttributes = new { @class = "form-control form-control-sm", maxlength = 3, name = "DepartmentCode", placeholder = "Department Code" } })
                            @Html.ValidationMessageFor(model => model.DepartmentCode, "", new { @id = "valDepartmentCode", @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control form-control-sm", @maxlength = 40, name = "DepartmentName", placeholder = "Department Name" } })
                            @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.BranchDepartment.BranchName, htmlAttributes: new { @class = "col-form-label-sm col-sm-3", name = "Branch.BranchCode" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.BranchDepartment.BranchCode, (SelectList)ViewData["SelectListBranch"], "", new { @id = "cboBranch", @class = "form-control select2DDList" })
                            @Html.ValidationMessageFor(model => model.BranchDepartment.BranchCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    if (Convert.ToInt32(ViewData["FormAction"]) == 2)
                    {
                        <div class="form-group row text-sm-left">

                            @Html.LabelFor(model => model.OperatorID, "Operator ID", htmlAttributes: new { @class = "col-form-label-sm col-sm-2" })
                            <div class="col-sm-3">
                                @Html.EditorFor(model => model.OperatorID, new { htmlAttributes = new { @class = "form-control form-control-sm", name = "OperatorID", placeholder = "Operator ID", disabled = true } })
                                @Html.ValidationMessageFor(model => model.OperatorID, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.LastUpdate, "Last Update", htmlAttributes: new { @class = "col-form-label-sm col-sm-2" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.LastUpdate, new { @Value = Model.LastUpdate.ToString("dd/MMM/yyyy HH:mm:ss"), @class = "form-control form-control-sm", name = "LastUpdate", placeholder = "Last Update", disabled = true })
                                @Html.ValidationMessageFor(model => model.LastUpdate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" title="Input New Department" id="btnAddNew">Add New</button>
                <button type="button" class="btn btn-primary" title="Save Department" id="btnSave">Save</button>
                <button type="button" class="btn btn-default" title="Close Department" id="btnClose" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}

<script type="text/javascript">
    var HOSStatus = $("#HOStatus").val();
    var cboBranch = $("#cboBranch").val();
    $(document).ready(function () {
        $(".select2DDList").select2();
        $("#btnSave").click(function () {
            if (!$("form#formCreateEdit").valid()) {
                return false;
            }

            var confirmText = "";
            if ($("#FormAction").val() == 1) {
                confirmText = ("Are you sure want to save data ?");
            } else {
                confirmText = ("Are you sure want to edit Department Code : " + $("#DepartmentCode").val() + " ?");
            }
            var answer = confirm(confirmText);
            if (answer) {
                if (!$("form#formCreateEdit").valid()) {
                    return false;
                }

                if ($("#FormAction").val() == 1) {
                    $("#cboBranch").prop('disabled', false);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "Department", new { Area = "GeneralTable" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            LoadData();
                            $("#FormSave").val("1");
                            alert(respond);
                        },
                        error: function (aa, bb, cc) {
                        }
                    });
                }
                else {
                    $("#cboBranch").prop('disabled', false);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Edit", "Department", new { Area = "GeneralTable" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            LoadData();
                            $("#FormSave").val("1");
                            alert(respond);
                        }
                    });
                    $("#cboBranch").prop('disabled', true);
                }
                if (HOSStatus == 0) {
                    $("#cboBranch").prop('disabled', true);
                    $("#cboBranch").val(cboBranch);
                }
            }
            else {
                return false;
            }
        }),

        $("#btnClose, .close").click(function () {
            var cboBranchCode = $("#cboBranch").val();
            if (cboBranchCode == "") {
                cboBranchCode = $("#DefBranch").val();
            }
            $('#loadingModal').modal('hide');
            $("#CreateEditForm").modal('hide');
            if ($("#FormSave").val() == "1") {
                @*window.location.href = '@Url.Action("index", "Department", new { Area = "GeneralTable" })';*@
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("index", "Department", new { Area = "GeneralTable" })',
                    data: { "branchCode": cboBranchCode },
                    success: function () {
                        if (cboBranchCode != "") {
                            $("#cboBranchIndex").val(cboBranchCode);
                        }
                        LoadData();
                    },
                    error: function (status) {
                        alert(status);
                    }
                });
            }
        }),

        $("#btnAddNew").click(function () {
            if (!$('#DepartmentCode, #DepartmentName, #cboBranch').val() == "") {
                var answer = confirm("Are you sure want to clear this form ?");

                if (answer) {
                    $("form#formCreateEdit").trigger("reset");
                    $(':input', '#formCreateEdit').not(':button, :submit, :reset, :hidden').val('');
                    $('#DepartmentCode').prop('readonly', false);
                    $("#FormAction").val("1");
                    $("#FormSave").val("1");
                    if (HOSStatus == 0) {
                        $("#cboBranch").prop('disabled', true);
                        $("#cboBranch").val(cboBranch);
                    } else {
                        $("#cboBranch").prop('disabled', false);
                    }
                    $(".select2DDList").select2();
                }
                else {
                    e.preventDefault();
                }
            }
            else {
                e.preventDefault();
            }
        })
    });

    $('#CreateEditForm').on('hidden.bs.modal', function (e) {
        $('#loadingModal').modal('hide');
    })

</script>