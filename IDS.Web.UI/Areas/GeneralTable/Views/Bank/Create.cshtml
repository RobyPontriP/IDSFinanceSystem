@model IDS.GeneralTable.Bank

<style type="text/css">
    .select2-container {
        width: 100% !important;
    }
</style>

<div class="modal fade" id="CreateEditForm" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle"></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm(null, null, FormMethod.Get, new { @id = "formCreateEdit" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.Hidden("FormAction", Convert.ToInt32(ViewData["FormAction"]))
                    @Html.Hidden("FormSave", "0");

                    <script type="text/javascript">
                        $('form#formCreateEdit').removeData("validator");
                        $('form#formCreateEdit').removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse($('form#formCreateEdit'));
                    </script>

                    <div class="form-group row label">
                        @Html.LabelFor(model => model.BankCode, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.BankCode, new { htmlAttributes = new { @class = "form-control form-control-sm", @maxlength = 20, placeholder = "Bank Code" } })
                            @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.BankName, "Bank Name", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control form-control-sm", @maxlength = 50, placeholder = "Bank Name" } })
                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.BankCcy.CurrencyCode, "Ccy", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.BankCcy.CurrencyCode, (SelectList)ViewData["SelectListCurrency"], " ", new { @id = "cboCcy", @class = "form-control select2DDList" })
                            @Html.ValidationMessageFor(model => model.BankCcy.CurrencyCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.GelAccount.Account, "Account", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.GelAccount.Account, (SelectList)ViewData["SelectListGelAcc"], " ", new { @id = "cboGelAcc", @class = "form-control select2DDList" })
                            @Html.ValidationMessageFor(model => model.GelAccount.Account, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Beneficiary, "Beneficiary", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Beneficiary, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "Beneficiary" } })
                            @Html.ValidationMessageFor(model => model.Beneficiary, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.NoRek, "Acc. No.", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.NoRek, new { htmlAttributes = new { @class = "form-control form-control-sm", @maxlength = 50, placeholder = "Account Number" } })
                            @Html.ValidationMessageFor(model => model.NoRek, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.City.CityCode, "City", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.City.CityCode, (SelectList)ViewData["SelectListCity"], " ", new { @id = "cboCity", @class = "form-control select2DDList" })
                            @Html.ValidationMessageFor(model => model.City.CityCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Address, "Address", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @*@Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control form-control-sm", @rows = "2", @style = "resize:none" } })*@
                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control form-control-sm", @maxlength = 50, @rows = "2", @style = "resize:none" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    if (Convert.ToInt32(ViewData["FormAction"]) == 2)
                    {
                        <div class="form-group row text-sm-left">

                            @Html.LabelFor(model => model.OperatorID, "Operator ID", htmlAttributes: new { @class = "col-form-label-sm col-sm-2" })
                            <div class="col-sm-3">
                                @Html.EditorFor(model => model.OperatorID, new { htmlAttributes = new { @class = "form-control form-control-sm", name = "OperatorID", placeholder = "Operator ID", disabled = true } })
                                @Html.ValidationMessageFor(model => model.OperatorID, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.LastUpdate, "Last Update", htmlAttributes: new { @class = "col-form-label-sm col-sm-2" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.LastUpdate, new { @Value = Model.LastUpdate.ToString("dd/MMM/yyyy HH:mm:ss"), @class = "form-control form-control-sm", name = "LastUpdate", placeholder = "Last Update", disabled = true })
                                @Html.ValidationMessageFor(model => model.LastUpdate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" title="Input New Bank" id="btnAddNew">Add New</button>
                <button type="button" class="btn btn-primary" title="Save Bank" id="btnSave">Save</button>
                <button type="button" class="btn btn-danger" title="Close This Form" id="btnClose" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $(".select2DDList").select2();

        $("#btnSave").click(function () {
            if(!$("form#formCreateEdit").valid())
            {
                return false;
            }

            var confirmText = "";
            if ($("#FormAction").val() == 1) {
                confirmText = ("Are you sure want to save data ?");
            } else {
                confirmText = ("Are you sure want to edit Bank Code : " + $("#BankCode").val() + " ?");
            }

            var answer = confirm(confirmText);
            if (answer) {
                if ($("#FormAction").val() == 1) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "Bank", new { Area = "GeneralTable" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            LoadData();
                            $("#FormSave").val("1");
                            alert(respond);
                        }
                    });
                }
                else {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Edit", "Bank", new { Area = "GeneralTable" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            LoadData();
                            $("#FormSave").val("1");
                            alert(respond);
                        }
                    });
                }
            }

        }),

        $("#btnClose, .close").click(function () {
            $("#CreateEditForm").modal('hide');
            $('#loadingModal').modal('hide');
            if ($("#FormSave").val() == "1") {
                @*window.location.href = '@Url.Action("index", "Bank", new { Area = "GeneralTable" })';*@
                //LoadData();
            }
        }),

        $("#btnAddNew").click(function () {
            if (!$('#BankCode, #BankName').val() == "") {
                var answer = confirm("Are you sure want to clear this form ?");

                if (answer) {
                    $("form#formCreateEdit").trigger("reset");
                    $(':input', '#formCreateEdit').not(':button, :submit, :reset, :hidden').val('');
                    $('#BankCode').prop('readonly', false);
                    $("#FormAction").val("1");
                    $("#FormSave").val("1");
                }
                else {
                    e.preventDefault();
                }
            }
            else {
                e.preventDefault();
            }
        }),

        $('#cboCcy').change(function () {
            var CCY = $('#cboCcy').val();
            //$('#cboToCCY').hide();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCOAFromCCY", "ChartOfAccount", new { Area = "GLTable" })',
                dataType: 'json',
                data: { currencyCode: CCY },
                success: function (respond) {
                    $('#cboGelAcc').empty();
                    $.each(respond, function (i, item) {
                        $('#cboGelAcc').append('<option value = "' + item.Value + '">' + item.Text + '</option>');
                    });
                }
            });
        });
    });

    $('#CreateEditForm').on('hidden.bs.modal', function (e) {
        $('#loadingModal').modal('hide');
    })

</script>