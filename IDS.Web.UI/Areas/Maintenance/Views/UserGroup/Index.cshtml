@model IEnumerable<IDS.Maintenance.UserGroup>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "User Group List";
}

@section Styles {
<link rel="stylesheet" href="~/Content/DataTables/datatables.css" />
<link rel="stylesheet" href="~/Content/DataTables/DataTables-1.10.25/css/dataTables.bootstrap5.min.css">
<link rel="stylesheet" href="~/Content/DataTables/Select-1.3.3/css/select.bootstrap5.min.css" />
}
<!-- start -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <section class="col-lg-12 connectedSortable">
                <div class="card">
                    <div class="card-header">
                        <h3 id="btnjf1" class="card-title">
                          <!-- <i class="fas fa-user mr-1" style="color:#4cff00 !important;"></i>-->
                            @ViewBag.Title
                        </h3>
                        <div class="card-tools">

                            <ul class="nav nav-pills ml-auto sortablex">
                                <li class="nav-item mr-1">
                                    <a href="#" class="btn btn-sm btn-info" onclick="RefreshUserGroupPage()">
                                        <i class="fas fa-sync"></i>
                                    </a>
                                </li>
                                <li class="nav-item mr-1">
                                    @{
                                        if (Convert.ToInt32(ViewData["Page.Insert"]) == 1)
                                        {
                                            <a href="#" class="btn btn-sm btn-primary" onclick="LoadCreateNewForm()">
                                                <i class="fas fa-plus"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="#" class="btn btn-sm btn-primary" onclick= "NoAccessModal('Cannot Access this function Please contact your administrator!')">
                                                <i class="fas fa-plus"></i>
                                            </a>
                                        }

                                    }
                                </li>
                                <li class="nav-item mr-1">
                                    @{
                                        if (Convert.ToInt32(ViewData["Page.Edit"]) == 1)
                                        {
                                            <a class="btn btn-sm btn-info" onclick="LoadEditForm()">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="btn btn-sm btn-info" onclick="NoAccessModal('Cannot Access this function Please contact your administrator!')" disabled="disabled">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        }
                                    }
                                    <!--<a class="nav-link" href="#sales-chart" data-toggle="tab">Donut</a>-->
                                </li>
                                <li class="nav-item mr-1">
                                    @{
                                        if (Convert.ToInt32(ViewData["Page.Delete"]) == 1)
                                        {
                                            <a onclick="Delete()" class="btn btn-sm btn-danger" href="#">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a onclick="Delete()" class="btn btn-sm btn-danger" href="#">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        }
                                    }
                                </li>
                                <li class="nav-item mr-1">
                                    @{
                                        if (Convert.ToInt32(ViewData["Page.Edit"]) == 1)
                                        {
                                            <a class="btn btn-sm btn-warning" onclick="LoadPrivileges()">
                                                <i class="fas fa-key"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="btn btn-sm btn-warning" onclick="NoAccessModal('Cannot Access this function Please contact your administrator!')" disabled="disabled">
                                                <i class="fas fa-key"></i>
                                            </a>
                                        }
                                    }
                                </li>
                            </ul>
                        </div>
                    </div><!-- /.card-header -->
                    <div class="card-body">
                        <div class="tab-content p-0">
                            <div id="classgrid1" class="row mb-1">
                                <div class="table-responsive table-responsive-sm p-2 bg-white border">
                                    <table id="tableData" class="table table-bordered table-hover w-100">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>User Group Code</th>
                                                <th>User Group Name</th>
                                                <th>Operator ID</th>
                                                <th>Last Update</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div><!-- /.card-body -->
                </div>
            </section>
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</section>
<!-- stop -->

<div id="PartialSection">

</div>

@section Scripts{

    <script src="~/Scripts/moment.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/DataTables-1.10.25/js/dataTables.bootstrap5.min.js"></script>
    <script type="text/javascript" src="~/Content/DataTables/Select-1.3.3/js/select.bootstrap5.js"></script>
    <script type="text/javascript" src="~/Content/JQuery_UI/jquery-ui.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".sortablex").sortable();

            RefreshUserGroup();
        });

        function RefreshUserGroup() {
             $('#tableData').DataTable({
                "bDestroy": true,
                "columnDefs": [
                    {
                        "targets": 'no-sort',
                        "orderable": false,
                    },
                    {
                        "data": null,
                        "width": "20px",
                        "defaultContent": '',
                        "orderable": false,
                        "className": "select-checkbox",
                        "checkboxes": {
                            "selectRow": true
                        },
                        "targets": [0]
                    },
                    {
                        "width": "110px",
                        "orderable": true,
                        "targets": [1]
                    },
                    {
                        "width": "100px",
                        "orderable": true,
                        "targets": [3]
                    },
                    {
                        "width": "120px",
                        "orderable": true,
                        "targets": [4]
                    },
                ],
                "select": {
                    "style": 'os'
                },
                "language":
                {
                    "search": "",
                    "searchPlaceholder": "Search...",
                    "emptyTable": "No record found.",
                    "processing": "<div class='overlay custom-loader-background' style='background: transparent !important;'><i class='fa fa-spinner fa-spin custom-loader-color' style='font-size:30px;color:#2196F3'></i></div>"
                },
                "processing": "true",
                "order": [[1, "asc"]],
                "serverSide": "true",
                "lengthMenu": [[1, 10, 20, 50, 100, 1000, -1], [1, 10, 20, 50, 100, 1000, "All"]],
                "pageLength": 10,
                "ajax":
                {
                    "url": '@Url.Action("GetData", "UserGroup", new { Area = "Maintenance" })',
                    "type": "POST",
                    "dataType": "JSON"
                },
                "columns": [
                    { "data": null },
                    { "data": "GroupCode", "name": "GroupCode" },
                    { "data": "GroupName", "name": "GroupName" },
                    { "data": "OperatorID", "name": "OperatorID" },
                    {
                        "data": "LastUpdate", "name": "LastUpdate",
                        "render": function (data, type, row, meta) {
                            return moment(row.LastUpdate).format('DD/MMM/YYYY HH:mm:ss');
                        }
                    }
                ]
            });
        }

        function LoadCreateNewForm() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("Create", "UserGroup", new { Area = "Maintenance" })',
                contentType: 'application/html; charset=utf-8',
                dataType: 'html',
                success: function (result) {
                    var myElement = document.getElementById("msgbosxmodal");
                    if (!myElement) {
                        let div = document.createElement('div');
                        div.id = 'msgbosxmodal';
                        document.body.appendChild(div);
                    }
                    document.getElementById('msgbosxmodal').innerHTML = "";
                    $("#msgbosxmodal").html(result);
                    $("#modalTitle").html("Create Data");
                    $("#CreateEditForm").modal('show');
                },
                error: function (status) {
                    NoAccessModal('');
                }
            });
        }

        function LoadEditForm() {

            var tbl_ = $('#tableData').DataTable();
            var tblData_ = tbl_.rows('.selected').data();
            var tblDatalength_ = tblData_.length;


            var form = this;
            //var selRow = table.rows('.selected').data();
            var data = null;

            if (tblDatalength_ > 0) {
                data = tblData_[0]["GroupCode"];
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("Edit", "UserGroup", new { Area = "Maintenance" })',
                    data: {
                        'groupCode': data
                    },
                    dataType: 'html',
                    success: function (result) {
                        var myElement = document.getElementById("msgbosxmodal");
                        if (!myElement) {
                            let div = document.createElement('div');
                            div.id = 'msgbosxmodal';
                            document.body.appendChild(div);
                        }
                        document.getElementById('msgbosxmodal').innerHTML = "";

                        $("#msgbosxmodal").html(result);
                        $("#modalTitle").html("Edit Data");
                        $("#GroupCode").attr('readonly', 'true');
                        $("#CreateEditForm").modal('show');
                    },
                    error: function (status) {
                        NoAccessModal('');
                    }
                });
            }
            else {
               NoAccessModal("Please select data to be edit");
            }
        }

        function RefreshUserGroupPage() {
            var pieChartContent = document.getElementById('classgrid1');
            pieChartContent.innerHTML = '&nbsp;';
            $('#classgrid1').append("<div class='table-responsive table-responsive-sm p-2 bg-white border'>    <table id='tableData' class='table table-bordered table-hover w-100'>        <thead>        <tr>            <th></th>            <th>User Group Code</th>            <th>User Group Name</th>            <th>Operator ID</th>            <th>Last Update</th>        </tr>        </thead>    </table></div>");
            RefreshUserGroup();
        }

        function LoadPrivileges() {
            var myElement = document.getElementById("tableData");
            if (!myElement) {
                return;
            }

            var tbl_ = $('#tableData').DataTable();
            var tblData_ = tbl_.rows('.selected').data();
            var tblDatalength_ = tblData_.length;
            if (tblDatalength_ <= 0) {
                NoAccessModal("You Must Be Selected First!");
                return;
            }


            var GroupCode = tblData_[0].GroupCode;
            var GroupName = tblData_[0].GroupName;

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetPrivileges", "UserGroup", new { Area = "Maintenance" })',
                contentType: 'application/html; charset=utf-8',
                dataType: 'html',
                success: function (result) {
                    var pieChartContent = document.getElementById('classgrid1');
                    pieChartContent.innerHTML = '&nbsp;';
                    $('#classgrid1').append(result);

                    $('#txtgroupcode').val(GroupCode).prop("readonly", true);
                    $('#txtgroupname').val(GroupName).prop("readonly", true);

                    // isi tabel
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("LoadMntGroupUser", "UserGroup", new { Area = "Maintenance" })',
                        data: JSON.stringify({ 'ProjectName': GroupName, 'Groupcode': GroupCode }),
                        dataType: "json",
                        success: function (datajson) {
                            GetLlistPriveleges(datajson)
                        },
                        error: function (xhr, status, errorThrown) {
                            console.log(xhr.responseText);
                        }
                    });

                    // isi project main
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetProjectMain", "UserGroup", new { Area = "Maintenance" })',
                        data: JSON.stringify({ 'ProjectName': GroupName, 'Groupcode': GroupCode }),
                        dataType: "json",
                        success: function (return_) {
                            $("#txtprojectmain").empty();
                            $.each(return_, function (i, item) {
                                $("#txtprojectmain").append('<option value = "' + item["Value"] + '">' + item["Text"] + '</option>');
                            });
                        },
                        error: function (xhr, status, errorThrown) {
                            console.log(xhr.responseText);
                        }
                    });

                    // isi permission
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetPerMission", "UserGroup", new { Area = "Maintenance" })',
                        data: JSON.stringify({ 'ProjectName': GroupName, 'Groupcode': GroupCode }),
                        dataType: "json",
                        success: function (per_) {
                            $("#cbopermission").empty();
                            $.each(per_, function (i, item) {
                                $("#cbopermission").append('<option value = "' + item["Value"] + '">' + item["Text"] + '</option>');
                            });
                        },
                        error: function (xhr, status, errorThrown) {
                            console.log(xhr.responseText);
                        }
                    });
                },
                error: function (xhr, status, errorThrown) {
                    console.log(xhr.responseText);
                }
            });
        }

        /*


        lanjut untuk besok


        */
        function txtprojectmainchangeHandler(elem) {
            // isi tabel
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadMntGroupUser", "UserGroup", new { Area = "Maintenance" })',
                data: JSON.stringify({ 'ProjectName': $('#txtprojectmain').val(), 'Groupcode': $('#txtgroupcode').val() }),
                dataType: "json",
                success: function (datajson) {
                    GetLlistPriveleges(datajson)
                },
                error: function (xhr, status, errorThrown) {
                    console.log(xhr.responseText);
                }
            });
        }

        function GetLlistPriveleges(lsData) {
            $('#tblprivileges').DataTable({
                "bDestroy": true,
                data: lsData,
                "columns": [
                    {
                        "data": "GroupCode",
                        render: function ( data, type, row ) {
                            if ( type === 'display' ) {
                                return '<input type="checkbox" class="editor-active">';
                            }
                            return data;
                        },
                        className: "dt-body-center"
                    },
                    { "data": "FrmName" },
                    { "data": "MenuName" },
                    { "data": "ProjectName" },
                    { "data": "Akses" }

                ],
                "select": {
                    "style": 'multi',
                    "selector": 'td:first-child'
                }
            });
        }

        function btnPrivilegesBack_click() {
             RefreshUserGroupPage();
        }

        function btnPrivilegesSave_click() {
            var tbl_ = $('#tblprivileges').DataTable();
            var $table = tbl_.table().node();
            var $chkbox_all = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);
            if ($chkbox_checked.length === 0) {
                NoAccessModal("You Must Be Selected First!");
                return
            }

            var Groupcode = {};
            jsonObj = [];
            var values = $('#tblprivileges input:checked').map(function () {
                var data = tbl_.row($(this).closest('tr')).data();
                //console.log(data.FrmName + "'s next columns name is: " + data.MenuName);
                item = {}
                item["hfURL"] = data.FrmName;
                jsonObj.push(item);
                return this.value;
            })//.get().join(',');// <-- ini bisa juga di pakai untuk joint textnya (dengan koma sebagai pemisah)
            Groupcode.Groupcode = $("#txtgroupcode").val();
            Groupcode.Akses = $("#cbopermission").val();
            if (jsonObj.length > 0) {
                Groupcode.Data = jsonObj
               $.ajax({
                type: "POST",
                url: '@Url.Action("MultiSaveToMntGroupAccess", "UserGroup", new { Area = "Maintenance" })',
                data: JSON.stringify(Groupcode),
                dataType: "json",
                success: function (datajson) {
                    //Refresh Tabel
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("LoadMntGroupUser", "UserGroup", new { Area = "Maintenance" })',
                        data: JSON.stringify({ 'ProjectName': $('#txtgroupname').val(), 'Groupcode': $('#txtgroupcode').val() }),
                        dataType: "json",
                        success: function (datajson) {
                            GetLlistPriveleges(datajson)
                        },
                        error: function (xhr, status, errorThrown) {
                            console.log(xhr.responseText);
                        }
                    });
                },
                error: function (xhr, status, errorThrown) {
                    console.log(xhr.responseText);
                }
                });
            }// End If


        }

        function updateDataTableSelectAllCtrl(table) {
            var $table = table.table().node();
            var $chkbox_all = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);



            // If none of the checkboxes are checked
            //if ($chkbox_checked.length === 0) {
            //    chkbox_select_all.checked = false;
            //    if ('indeterminate' in chkbox_select_all) {
            //        chkbox_select_all.indeterminate = false;
            //    }

            //    // If all of the checkboxes are checked
            //} else if ($chkbox_checked.length === $chkbox_all.length) {
            //    chkbox_select_all.checked = true;
            //    if ('indeterminate' in chkbox_select_all) {
            //        chkbox_select_all.indeterminate = false;
            //    }

            //    // If some of the checkboxes are checked
            //} else {
            //    chkbox_select_all.checked = true;
            //    if ('indeterminate' in chkbox_select_all) {
            //        chkbox_select_all.indeterminate = true;
            //    }
            //}
        }

        function Delete() {
            var form = this;
            var tbl_ = $('#tableData').DataTable();
            var selRow = tbl_.rows('.selected').data();


            if (selRow == null || selRow == 'undefined' || selRow.length == 0) {
                NoAccessModal("Please select the data you want to delete");
                return false;
            }

            var dataCollection = '';
            var data = '';

            $.each(selRow, function (index, row) {
                data += row["GroupCode"] + ',';
                dataCollection += '[' + row["GroupCode"] + '] - ' + row["GroupName"] + "\n";
            })

            var msg = "You are about to delete data:\n" + dataCollection + "\nAre you sure want to delete the data ?";
            var truefalse = "return_z";
            var hsl = ConfirmsModal(msg, truefalse);
            $(IDSMsgBox()).on(on_confirm(), function () {
                var val_ = $('#' + truefalse).val();
                if (val_.toLowerCase().indexOf("true") >= 0) {
                    if (dataCollection.length > 0) {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Delete", "UserGroup", new { Area = "Maintenance" })',
                            data: { "userGroupCodeList": data },
                            dataType: 'JSON',
                            success: function (respond) {
                                switch (respond) {
                                    case "NoAccess":
                                        NoAccessModal("NoAccess");
                                        break;
                                    case "Success":
                                        NoAccessModal(respond);
                                        RefreshUserGroup();
                                        break;
                                    default:
                                        NoAccessModal(respond);
                                        RefreshUserGroup();
                                        break;
                                }

                            },
                            error: function (respond) {
                                NoAccessModal(respond);
                            }
                        })
                    }
                } else {
                    console.log("return Faalse");
                }

            })

        }
    </script>
}