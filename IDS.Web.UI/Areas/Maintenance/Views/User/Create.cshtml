@model IDS.Maintenance.User
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="modal fade" id="CreateEditForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle"></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm(null, null, FormMethod.Get, new { @id = "formCreateEdit" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.Hidden("FormAction", Convert.ToInt32(ViewData["FormAction"]))
                    @Html.Hidden("FormSave", "0");

                    <script type="text/javascript">
                        $('form#formCreateEdit').removeData("validator");
                        $('form#formCreateEdit').removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse($('form#formCreateEdit'));
                    </script>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @id = "txtUserID", @class = "form-control form-control-sm", @maxlength = 20, placeholder = "User ID" } })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @id = "txtUserName", @class = "form-control form-control-sm", @maxlength = 20, placeholder = "User Name" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @id = "txtEmailAddress", @class = "form-control form-control-sm", @maxlength = 128, placeholder = "Email Address" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.UserGroup.GroupCode, "User Group", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.UserGroup.GroupCode, (SelectList)ViewData["UserGroupList"], "--- Select User Group ---", new { @id = "cboUserGroup", @class = "form-control form-control-sm" })
                            @Html.ValidationMessageFor(model => model.UserGroup.GroupCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ExpiredCode, "Expired Code", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.ExpiredCode, new SelectList(ViewData["ExpiredCodeList"] as List<SelectListItem>, "Value", "Text"), "--- Select Expired Code ---", new { @id = "cboExpiredCode", @class = "form-control form-control-sm" })
                            @Html.ValidationMessageFor(model => model.ExpiredCode, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group row">
                        @Html.LabelFor(model => model.SecurityCode, "Security Code", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.SecurityCode, (SelectList)ViewData["SelectSecurityCode"], "--- Select Security Code ---", new { @id = "cboSecurityCode", @class = "form-control form-control-sm" })
                            @Html.ValidationMessageFor(model => model.SecurityCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.SecurityAnswer, "Security Answer", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.SecurityAnswer, new { @id = "txtSecurityAnswer", @maxlength = 200, @class = "form-control form-control-sm" })
                            @Html.ValidationMessageFor(model => model.SecurityAnswer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Status, "Active Status", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.Status, (SelectList)ViewData["SelectActiveStatus"], "--- Select Active Status ---", new { @id = "cboActiveStatus", @class = "form-control form-control-sm" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group row">
                            @Html.LabelFor(model => model.SecurityCode, "City", htmlAttributes: new { @class = "col-form-label-sm col-sm-3", name = "CountryCity.CountryCode" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.SecurityCode, (SelectList)ViewData["SelectListCity"], "--- Select City ---", new { @id = "cboCity", @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.SecurityCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.KecamatanKelurahan.KecamatanName, "Kecamatan", htmlAttributes: new { @class = "col-form-label-sm col-sm-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.KecamatanKelurahan.KecamatanCode, (SelectList)ViewData["SelectListKecamatan"], "--- Select Kecamatan ---", new { @id = "cboKecamatan", @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.KecamatanKelurahan.KecamatanCode, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="btnAddNew">Add New</button>
                <button type="button" class="btn btn-primary" id="btnSave">Save</button>
                <button type="button" class="btn btn-default" id="btnClose" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSave").click(function () {
            if (!$("form#formCreateEdit").valid()) {
                return false;
            }

            var confirmText = "";
            if ($("#FormAction").val() == 1) {
                confirmText = ("Are you sure want to save data ?");
            } else {
                confirmText = ("Are you sure want to edit User ID : " + $("#UserID").val() + " ?");
            }
            var answer = confirm(confirmText);

            if (answer) {
                if ($("#FormAction").val() == 1) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "User", new { Area = "Maintenance" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            $("#FormSave").val("1");
                            alert(respond);
                        }
                    });
                }
                else {
                    $("#txtUserID").prop('disabled', false);

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Edit", "Kelurahan", new { Area = "GeneralTable" })',
                        processData: false,
                        data: $("#formCreateEdit").serialize(),
                        success: function (respond) {
                            $("#FormSave").val("1");
                            $("#txtUserID").prop('disabled', false);
                            alert(respond);
                        }
                    });
                }
            }
        }),

        $("#btnClose, .close").click(function () {
            $("#CreateEditForm").modal('hide');
            if ($("#FormSave").val() == "1") {
                window.location.href = '@Url.Action("index", "User", new { Area = "Maintenance" })';
            }
        }),

        $("#btnAddNew").click(function () {
            if (!$('#txtUserID, #txtUserName, #txtEmailAddress, #cboUserGroup, #cboExpiredCode, #cboSecurityCode, #txtSecurityAnswer, #cboActiveStatus').val() == "") {
                var answer = confirm("Are you sure want to clear this form ?");

                if (answer) {
                    $("form#formCreateEdit").trigger("reset");
                    $(':input', '#formCreateEdit').not(':button, :submit, :reset, :hidden').val('');

                    $('#txtUserID').prop('readonly', false);

                    $("#FormAction").val("1");
                    $("#FormSave").val("1");
                }
                else {
                    e.preventDefault();
                }
            }
            else {
                e.preventDefault();
            }
        });
    });





</script>

